{"name": "test_find_case_file_by_case_state", "status": "broken", "statusDetails": {"message": "AttributeError: 'str' object has no attribute 'read'", "trace": "self = <test_lawsuit.TestLawsuit object at 0x0D328AB0>\n\n    def test_find_case_file_by_case_state(self):\n        driver = self.driver\n        self.login()\n        home = HomePage(driver)\n        home.click_law_suit_page()\n        lawsuit = LawsuitPage(driver)\n>       lawsuit.filter_case_by_case_state()\n\ntest_lawsuit.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\LawsuitPage.py:315: in filter_case_by_case_state\n    distros_dicst = json.load(txt_json)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfp = '\"array (\\\\n  0 => \\\\n  stdClass::__set_state(array(\\\\n     \\'blg_i_dava_turu\\' => \\'Ceza\\',\\\\n     \\'blg_i_dava_turu_...karar_yil_lbl\\' => \\'Karar Y\\\\u0131l/No:\\',\\\\n     \\'blg_i_dava_esas_yil_lbl\\' => \\'Esas Y\\\\u0131l/No:\\',\\\\n  )),\\\\n)\"'\ncls = None, object_hook = None, parse_float = None, parse_int = None, parse_constant = None, object_pairs_hook = None, kw = {}\n\n    def load(fp, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``fp`` (a ``.read()``-supporting file-like object containing\n        a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders that rely on the\n        order that the key and value pairs are decoded (for example,\n        collections.OrderedDict will remember the order of insertion). If\n        ``object_hook`` is also defined, the ``object_pairs_hook`` takes priority.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n    \n        \"\"\"\n>       return loads(fp.read(),\n            cls=cls, object_hook=object_hook,\n            parse_float=parse_float, parse_int=parse_int,\n            parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\nE       AttributeError: 'str' object has no attribute 'read'\n\nc:\\users\\z003d7tu\\appdata\\local\\programs\\python\\python36-32\\lib\\json\\__init__.py:296: AttributeError"}, "attachments": [{"name": "stdout", "source": "ae11b71b-e62c-4425-95b7-a16a068e3fc2-attachment.txt", "type": "text/plain"}], "start": 1567876139312, "stop": 1567876154693, "uuid": "9d15ac36-5c64-4165-b8b8-9c5dbd608cb9", "historyId": "5babb8dd44edf30569ec9e09df3cb827", "testCaseId": "fc39a709679ffb195ebe5a1435e26250", "fullName": "test_lawsuit.TestLawsuit#test_find_case_file_by_case_state", "labels": [{"name": "parentSuite"}, {"name": "suite", "value": "test_lawsuit"}, {"name": "subSuite", "value": "TestLawsuit"}, {"name": "host", "value": "EVT01066NB"}, {"name": "thread", "value": "27972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_lawsuit"}]}